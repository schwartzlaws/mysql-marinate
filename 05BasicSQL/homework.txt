All exercises here concern the music database, which is available at 
http://tahaghoghi.com/LearningMySQL/Downloads/Files/Data/SQL_files_with_foreign_key_references/music.sql

I strongly recommend theta join style as per 
http://code.openark.org/blog/mysql/mysql-joins-on-vs-using-vs-theta-style - the nutshell is that Theta style is like this:

SELECT ... FROM table1 INNER JOIN table2 WHERE field1=field2 AND filter=something;

ANSI style is like this:
SELECT ... FROM table1 INNER JOIN table2 ON (field1=field2) WHERE filter=something;

The reason for this is that when you have many tables joined 
it's easier to see the join clause in ON or USING with ANSI style. 
If you join many tables and use theta style, where everything is 
in the WHERE clause, it's possible to forget some of the join clauses 
in the WHERE. If you put the join clauses in the JOIN part, it's way more readable.

--> OK, will keep this in mind. I did the homework before this note…. <---

1) Use one or more SELECT statements to find out how many tracks are on New Order's Brotherhood album.

mysql> SELECT MAX(track_id) FROM album INNER JOIN track USING (artist_id, album_id) WHERE album_name = "Brotherhood";
+---------------+
| MAX(track_id) |
+---------------+
|             9 |
+---------------+
1 row in set (0.00 sec)


2) Using a join, list the albums that we own by the band New Order

<<<<<<< HEAD
mysql> SELECT artist_name, album_name FROM artist INNER JOIN album USING (artist_id) WHERE artist_name = "New Order";
+-------------+------------------------------------------+
| artist_name | album_name                               |
+-------------+------------------------------------------+
| New Order   | Retro - John McCready FAN                |
| New Order   | Substance (Disc 2)                       |
| New Order   | Retro - Miranda Sawyer POP               |
| New Order   | Retro - New Order / Bobby Gillespie LIVE |
| New Order   | Power, Corruption & Lies                 |
| New Order   | Substance 1987 (Disc 1)                  |
| New Order   | Brotherhood                              |
+-------------+------------------------------------------+
7 rows in set (0.01 sec)


3) With INSERT statements, add the artist Leftfield to the database. For this new artist, add the album "Leftism" that has
the following tracks:
=======
3) With INSERT statements, add the artist Leftfield to the database. 
For this new artist, add the album "Leftism" that has the following tracks:
>>>>>>> upstream/master
a. Release the Pressure (Time: 7.39)
b. Afro-Melt (Time: 7.33)
c. Melt (Time: 5.21)
d. Song of Life (Time: 6.55)
e. Original (Time: 6.00)
f. Black Flute (Time: 3.46)
g. Space Shanty (Time: 7.15)
h. Inspection Check One (Time: 6.30)
i. Storm 3000 (Time: 5.44)
j. Open Up (Time: 6.52)
k. 21st Century Poem (Time: 5.42)
l. Bonus Track (Time: 1.22)

The answer to this question should be the INSERT statement(s).

mysql> INSERT INTO track VALUES (1,"Release the Pressure",7,1,7.39),(2,"Afro-Melt",7,1,7.33),(3,"Melt",7,1,5.21),(4,"Song of Life",7,1,6.55),(5,"Original",7,1,6.00),(6,"Black Flute",7,1,3.46),(7,"Space Shanty",7,1,7.15),(8,"Inspection Check One",7,1,6.30),(9,"Storm 30000",7,1,5.44),(10,"Open Up",7,1,6.52),(11,"21st Century Poem",7,1,5.42),(12,"Bonus Track",7,1,1.22);
Query OK, 12 rows affected (0.01 sec)
Records: 12  Duplicates: 0  Warnings: 0


4) How long in minutes is the Leftism album you added in Question 3? Hint: use the
SUM() aggregate function.

mysql> SELECT SUM(time) FROM album INNER JOIN track USING (artist_id,album_id) WHERE album.artist_id = 7 AND album.album_id = 1;
+-----------+
| SUM(time) |
+-----------+
|     67.99 |
+-----------+


5) Change the time for the Original track on the Leftism album to 6.22.

<<<<<<< HEAD
mysql> UPDATE track SET time = "6.22" WHERE track_id = 5 AND artist_id = 7 AND album_id =1;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

What about #6? - Remove the Bonus Track from the Leftism Album?

mysql> DELETE FROM track WHERE track_id = 12 AND artist_id = 7 AND album_id =1;
Query OK, 1 row affected (0.01 sec)

FINAL RESULT:

mysql> SELECT track_id, album_name, track_name, time FROM album INNER JOIN track USING (artist_id, album_id) WHERE album_name = "Leftism";
+----------+------------+----------------------+------+
| track_id | album_name | track_name           | time |
+----------+------------+----------------------+------+
|        1 | Leftism    | Release the Pressure | 7.39 |
|        2 | Leftism    | Afro-Melt            | 7.33 |
|        3 | Leftism    | Melt                 | 5.21 |
|        4 | Leftism    | Song of Life         | 6.55 |
|        5 | Leftism    | Original             | 6.22 |
|        6 | Leftism    | Black Flute          | 3.46 |
|        7 | Leftism    | Space Shanty         | 7.15 |
|        8 | Leftism    | Inspection Check One | 6.30 |
|        9 | Leftism    | Storm 30000          | 5.44 |
|       10 | Leftism    | Open Up              | 6.52 |
|       11 | Leftism    | 21st Century Poem    | 5.42 |
+----------+------------+----------------------+------+





=======
6) Remove the 'Bonus Track' from the Leftism album,
>>>>>>> upstream/master
